openapi: 3.0.0
info:
  title: Rides Management API
  description: This is a rides management API designed as part of Xendit backend coding test
  version: 1.0.0
servers:
  - url: http://localhost:8010
    description: Development server
tags:
  - name: Health Check
    description: API endpoints for health check
  - name: Rides Management
    description: API endpoints for rides management

# Data definitions

components:
  schemas:
    RideRequest:
      type: object
      required:
        - start_lat
        - start_long
        - end_lat
        - end_long
        - rider_name
        - driver_name
        - driver_vehicle
      properties:
        start_lat:
          type: number
        start_long:
          type: number
        end_lat:
          type: number
        end_long:
          type: number
        rider_name:
          type: string
        driver_name:
          type: string
        driver_vehicle:
          type: string
    RideResponse:
      type: object
      properties:
        rideId:
          type: integer
        startLat:
          type: number
        startLong:
          type: number
        endLat:
          type: number
        endLong:
          type: number
        riderName:
          type: string
        driverName:
          type: string
        driverVehicle:
          type: string
        created:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string

# Route definitions

paths:
  /health:
    get:
      tags:
        - Health Check
      summary: Returns health check for the server.
      description: The health check endpoint of rides management API.
      responses:
        '200':
          description: Healthy
          content:
            application/json:
              schema: 
                type: string

  /rides:
    post:
      tags:
        - Rides Management
      summary: Adds new ride.
      description: The endpoint to add new ride.
      requestBody:
        required: true
        description: New ride data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RideRequest'
      responses:
        '200':
          description: Added ride data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RideResponse'
        '4XX':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - Rides Management
      summary: Returns list of rides.
      description: The endpoint to get list of rides.
      responses:
        '200':
          description: List of rides
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RideResponse'
        '4XX':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: page_number
          in: query
          required: false
          description: The page number. Use blank or 0 to omit pagination.
          schema:
            type: integer
        - name: rows_per_page
          in: query
          required: false
          description: The rows per page limit. Use blank or 0 to omit pagination.
          schema:
            type: integer

  /rides/{id}:
    get:
      tags:
        - Rides Management
      summary: Returns a ride by ID.
      description: The endpoint to get a ride by its ID.
      responses:
        '200':
          description: Ride search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RideResponse'
        '4XX':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '5XX':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: id
        in: path
        required: true
        description: The ride ID to search
        schema:
          type: integer